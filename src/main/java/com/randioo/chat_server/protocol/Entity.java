// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Entity.proto

package com.randioo.chat_server.protocol;

public final class Entity {
  private Entity() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ChatData extends
      com.google.protobuf.GeneratedMessage {
    // Use ChatData.newBuilder() to construct.
    private ChatData() {
      initFields();
    }
    private ChatData(boolean noInit) {}
    
    private static final ChatData defaultInstance;
    public static ChatData getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChatData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.randioo.chat_server.protocol.Entity.internal_static_com_randioo_chat_server_protocol_ChatData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.randioo.chat_server.protocol.Entity.internal_static_com_randioo_chat_server_protocol_ChatData_fieldAccessorTable;
    }
    
    // optional int32 roleId = 1;
    public static final int ROLEID_FIELD_NUMBER = 1;
    private boolean hasRoleId;
    private int roleId_ = 0;
    public boolean hasRoleId() { return hasRoleId; }
    public int getRoleId() { return roleId_; }
    
    // optional int32 tag = 4;
    public static final int TAG_FIELD_NUMBER = 4;
    private boolean hasTag;
    private int tag_ = 0;
    public boolean hasTag() { return hasTag; }
    public int getTag() { return tag_; }
    
    // optional string msg = 2;
    public static final int MSG_FIELD_NUMBER = 2;
    private boolean hasMsg;
    private java.lang.String msg_ = "";
    public boolean hasMsg() { return hasMsg; }
    public java.lang.String getMsg() { return msg_; }
    
    // optional bytes voice = 3;
    public static final int VOICE_FIELD_NUMBER = 3;
    private boolean hasVoice;
    private com.google.protobuf.ByteString voice_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasVoice() { return hasVoice; }
    public com.google.protobuf.ByteString getVoice() { return voice_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRoleId()) {
        output.writeInt32(1, getRoleId());
      }
      if (hasMsg()) {
        output.writeString(2, getMsg());
      }
      if (hasVoice()) {
        output.writeBytes(3, getVoice());
      }
      if (hasTag()) {
        output.writeInt32(4, getTag());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRoleId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getRoleId());
      }
      if (hasMsg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMsg());
      }
      if (hasVoice()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getVoice());
      }
      if (hasTag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getTag());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.randioo.chat_server.protocol.Entity.ChatData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.chat_server.protocol.Entity.ChatData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.chat_server.protocol.Entity.ChatData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.randioo.chat_server.protocol.Entity.ChatData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.chat_server.protocol.Entity.ChatData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.chat_server.protocol.Entity.ChatData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.randioo.chat_server.protocol.Entity.ChatData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.chat_server.protocol.Entity.ChatData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.randioo.chat_server.protocol.Entity.ChatData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.randioo.chat_server.protocol.Entity.ChatData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.randioo.chat_server.protocol.Entity.ChatData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.randioo.chat_server.protocol.Entity.ChatData result;
      
      // Construct using com.randioo.chat_server.protocol.Entity.ChatData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.randioo.chat_server.protocol.Entity.ChatData();
        return builder;
      }
      
      protected com.randioo.chat_server.protocol.Entity.ChatData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.randioo.chat_server.protocol.Entity.ChatData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.randioo.chat_server.protocol.Entity.ChatData.getDescriptor();
      }
      
      public com.randioo.chat_server.protocol.Entity.ChatData getDefaultInstanceForType() {
        return com.randioo.chat_server.protocol.Entity.ChatData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.randioo.chat_server.protocol.Entity.ChatData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.randioo.chat_server.protocol.Entity.ChatData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.randioo.chat_server.protocol.Entity.ChatData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.randioo.chat_server.protocol.Entity.ChatData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.randioo.chat_server.protocol.Entity.ChatData) {
          return mergeFrom((com.randioo.chat_server.protocol.Entity.ChatData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.randioo.chat_server.protocol.Entity.ChatData other) {
        if (other == com.randioo.chat_server.protocol.Entity.ChatData.getDefaultInstance()) return this;
        if (other.hasRoleId()) {
          setRoleId(other.getRoleId());
        }
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        if (other.hasMsg()) {
          setMsg(other.getMsg());
        }
        if (other.hasVoice()) {
          setVoice(other.getVoice());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRoleId(input.readInt32());
              break;
            }
            case 18: {
              setMsg(input.readString());
              break;
            }
            case 26: {
              setVoice(input.readBytes());
              break;
            }
            case 32: {
              setTag(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 roleId = 1;
      public boolean hasRoleId() {
        return result.hasRoleId();
      }
      public int getRoleId() {
        return result.getRoleId();
      }
      public Builder setRoleId(int value) {
        result.hasRoleId = true;
        result.roleId_ = value;
        return this;
      }
      public Builder clearRoleId() {
        result.hasRoleId = false;
        result.roleId_ = 0;
        return this;
      }
      
      // optional int32 tag = 4;
      public boolean hasTag() {
        return result.hasTag();
      }
      public int getTag() {
        return result.getTag();
      }
      public Builder setTag(int value) {
        result.hasTag = true;
        result.tag_ = value;
        return this;
      }
      public Builder clearTag() {
        result.hasTag = false;
        result.tag_ = 0;
        return this;
      }
      
      // optional string msg = 2;
      public boolean hasMsg() {
        return result.hasMsg();
      }
      public java.lang.String getMsg() {
        return result.getMsg();
      }
      public Builder setMsg(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMsg = true;
        result.msg_ = value;
        return this;
      }
      public Builder clearMsg() {
        result.hasMsg = false;
        result.msg_ = getDefaultInstance().getMsg();
        return this;
      }
      
      // optional bytes voice = 3;
      public boolean hasVoice() {
        return result.hasVoice();
      }
      public com.google.protobuf.ByteString getVoice() {
        return result.getVoice();
      }
      public Builder setVoice(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVoice = true;
        result.voice_ = value;
        return this;
      }
      public Builder clearVoice() {
        result.hasVoice = false;
        result.voice_ = getDefaultInstance().getVoice();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.randioo.chat_server.protocol.ChatData)
    }
    
    static {
      defaultInstance = new ChatData(true);
      com.randioo.chat_server.protocol.Entity.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.randioo.chat_server.protocol.ChatData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_randioo_chat_server_protocol_ChatData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_randioo_chat_server_protocol_ChatData_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Entity.proto\022 com.randioo.chat_server." +
      "protocol\"C\n\010ChatData\022\016\n\006roleId\030\001 \001(\005\022\013\n\003" +
      "tag\030\004 \001(\005\022\013\n\003msg\030\002 \001(\t\022\r\n\005voice\030\003 \001(\014"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_randioo_chat_server_protocol_ChatData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_randioo_chat_server_protocol_ChatData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_randioo_chat_server_protocol_ChatData_descriptor,
              new java.lang.String[] { "RoleId", "Tag", "Msg", "Voice", },
              com.randioo.chat_server.protocol.Entity.ChatData.class,
              com.randioo.chat_server.protocol.Entity.ChatData.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
